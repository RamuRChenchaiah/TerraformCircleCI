version: 2.1
#----------------------------------------------------------------------------------------------------------------------
# REUSABLE ALIASES
#----------------------------------------------------------------------------------------------------------------------
env: &env
  environment:
    # patcher auto-update-github-tags: cli/cli
    GH_VERSION: 2.10.1
    # The GOPRIVATE environment variable controls which modules the go command considers to be private
    # (not available publicly) and should therefore not use the proxy or checksum database.
    # Without this, tests fail with a "410 Gone" error
    GOPRIVATE: github.com/gruntwork-io
    # patcher auto-update-github-releases: minamijoyo/hcledit
    HCLEDIT_VERSION: 0.2.3
    # patcher auto-update: terraform-aws-ci
    MODULE_CI_VERSION: v0.47.2
    UPGRADE_TEST_LOG_FOLDER: /tmp/logs
defaults: &defaults
  <<: *env
  docker:
    - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.17-tf1.1-tg36.6-pck1.8
install_gh_cli: &install_gh_cli
  name: Install gh CLI
  command: |
    curl -Lo gh.tar.gz "https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_amd64.tar.gz"
    tar -xf gh.tar.gz
    sudo mv "gh_${GH_VERSION}_linux_amd64/bin/gh" /usr/local/bin
    sudo chmod +x /usr/local/bin/gh
    echo 'export GITHUB_TOKEN="$GITHUB_OAUTH_TOKEN"' >> $BASH_ENV
install_hcledit: &install_hcledit
  name: Install hcledit
  command: |
    curl -Lo hcledit.tar.gz "https://github.com/minamijoyo/hcledit/releases/download/v${HCLEDIT_VERSION}/hcledit_${HCLEDIT_VERSION}_linux_amd64.tar.gz"
    tar -xf hcledit.tar.gz
    sudo mv hcledit /usr/local/bin
    sudo chmod +x /usr/local/bin/hcledit
run_pre_commit: &run_pre_commit
  # Fail the build if the pre-commit hooks don't pass. Note: if you run $ pre-commit install locally within this repo, these hooks will
  # execute automatically every time before you commit, ensuring the build never fails at this step!
  name: Run pre-commit hooks
  command: "pip install pre-commit~=2.9\ngo get golang.org/x/tools/cmd/goimports\nexport GOPATH=~/go/bin && export PATH=$PATH:$GOPATH \npre-commit install\npre-commit run --all-files\n"
# ---------------------------------------------------------------------------------------------------------------------
# REUSABLE STEPS
# ---------------------------------------------------------------------------------------------------------------------
commands:
  prepare_environment:
    description: Prepare the environment by installing necessary tools.
    steps:
      - run: mkdir -p /tmp/logs
  store_results:
    description: Store test results for easy viewing.
    steps:
      - run:
          command: terratest_log_parser --testlog /tmp/logs/all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs
#----------------------------------------------------------------------------------------------------------------------
# BUILD JOBS
#----------------------------------------------------------------------------------------------------------------------
jobs:
  precommit:
    description: Run precommit linters on the code.
    <<: *defaults
    steps:
      - checkout
      - prepare_environment
      - run:
          <<: *run_pre_commit
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci
      - checkout
      - prepare_environment
      - run:
          name: Run module tests
          command: |
            # Believe it or not, we've seen the tee command fail when we have too much logging all happening at once.
            # To ensure that tee failing doesn't cause the whole test suite to fail, we add an || true.
            run-go-tests --path ./test --timeout 2h --packages . | (tee /tmp/logs/all.log || true)
          no_output_timeout: 3600s
      - store_results
  upgrade_test:
    description: Run upgrades and post the results on the PR.
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci
      - checkout
      - prepare_environment
      - run:
          <<: *install_gh_cli
      - run:
          <<: *install_hcledit
      - run:
          name: Set environment variables for use in the upgrade test step.
          command: |
            # Set the UPGRADE_TEST_BASE_REF, UPGRADE_TEST_TF_BASE_VERSION, UPGRADE_TEST_TF_TARGET_VERSION env vars.
            ./.circleci/set-upgrade-test-vars.sh
      - run:
          name: Run upgrade tests
          command: |
            mkdir -p /tmp/logs
            # Pre-install terraform versions used in the test, before the tests run, to avoid installation racing.
            tfenv install $UPGRADE_TEST_TF_BASE_VERSION
            tfenv install $UPGRADE_TEST_TF_TARGET_VERSION
            # Believe it or not, we've seen the tee command fail when we have too much logging all happening at once.
            # To ensure that tee failing doesn't cause the whole test suite to fail, we add an || true.
            run-go-tests \
              --path ./test/upgrades \
              --timeout 1h \
              --extra-flags "-ldflags '-X github.com/gruntwork-io/terraform-aws-static-assets/test/upgrades.BaseRef=$UPGRADE_TEST_BASE_REF -X github.com/gruntwork-io/terraform-aws-static-assets/test/upgrades.TFBaseVersion=$UPGRADE_TEST_TF_BASE_VERSION -X github.com/gruntwork-io/terraform-aws-static-assets/test/upgrades.TFTargetVersion=$UPGRADE_TEST_TF_TARGET_VERSION'" \
              | (tee /tmp/logs/all.log || true)
          no_output_timeout: 3600s
      - store_results
      - run:
          name: Post upgrade test results
          command: ./.circleci/post-upgrade-test-results.sh
          when: always
workflows:
  version: 2
  build-and-test:
    jobs:
      - precommit:
          context:
            - Gruntwork Admin
          filters:
            tags:
              only: /^v.*/
      - test:
          context:
            - Gruntwork Admin
          requires:
            - precommit
          filters:
            tags:
              only: /^v.*/
  upgrade-test:
    jobs:
      - precommit:
          context:
            - Gruntwork Admin
          filters:
            tags:
              only: /^v.*/
      - upgrade_test:
          context:
            - Gruntwork Admin
          requires:
            - precommit
          filters:
            tags:
              only: /^v.*/
